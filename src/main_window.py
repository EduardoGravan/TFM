import sys
import requests
from io import BytesIO
from PIL import Image
from PyQt5 import QtCore, QtGui, QtWidgets
from twitter_handler import TwitterHandler
from database_handler import DatabaseHandler

class ClickableLabel(QtWidgets.QLabel):
    clicked =  QtCore.pyqtSignal()

    def mouseReleaseEvent(self, QMouseEvent):
        if QMouseEvent.button() == QtCore.Qt.LeftButton:
            self.clicked.emit()

class Ui_MainWindow(object):

    def __init__(self, twitter_handler: TwitterHandler, database_handler: DatabaseHandler):
        super().__init__()
        self.twitter_handler = twitter_handler
        self.database_handler = database_handler
        
        app = QtWidgets.QApplication(sys.argv)
        MainWindow = QtWidgets.QMainWindow()
        self.setupUi(MainWindow)

        MainWindow.show()
        sys.exit(app.exec_())

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1280, 720)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(900, 600))
        MainWindow.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.tab_widget = QtWidgets.QTabWidget(self.centralwidget)
        self.tab_widget.setObjectName("tab_widget")
        self.tab_1 = QtWidgets.QWidget()
        self.tab_1.setObjectName("tab_1")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.tab_1)
        self.verticalLayout_4.setContentsMargins(25, 25, 25, 25)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label = QtWidgets.QLabel(self.tab_1)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setTextFormat(QtCore.Qt.AutoText)
        self.label.setScaledContents(False)
        self.label.setObjectName("label")
        self.verticalLayout_4.addWidget(self.label, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.line_2 = QtWidgets.QFrame(self.tab_1)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout_4.addWidget(self.line_2)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setContentsMargins(50, 0, 50, 5)
        self.horizontalLayout.setSpacing(50)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.textEdit = QtWidgets.QTextEdit(self.tab_1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit.sizePolicy().hasHeightForWidth())
        self.textEdit.setSizePolicy(sizePolicy)
        self.textEdit.setAcceptRichText(False)
        self.textEdit.setObjectName("textEdit")
        self.horizontalLayout.addWidget(self.textEdit, 0, QtCore.Qt.AlignVCenter)
        self.search_button = QtWidgets.QPushButton(self.tab_1)
        self.search_button.setObjectName("search_button")
        self.horizontalLayout.addWidget(self.search_button, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout_4.addLayout(self.horizontalLayout)
        self.line = QtWidgets.QFrame(self.tab_1)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_4.addWidget(self.line)
        self.tableWidget = QtWidgets.QTableWidget(self.tab_1)
        self.tableWidget.setAlternatingRowColors(False)
        self.tableWidget.setTextElideMode(QtCore.Qt.ElideRight)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(4)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        self.tableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget.horizontalHeader().setMinimumSectionSize(75)
        self.tableWidget.horizontalHeader().setSortIndicatorShown(True)
        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.tableWidget.verticalHeader().setVisible(False)
        self.verticalLayout_4.addWidget(self.tableWidget)
        self.tab_widget.addTab(self.tab_1, "")
        self.tab_6 = QtWidgets.QWidget()
        self.tab_6.setObjectName("tab_6")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.tab_6)
        self.verticalLayout_7.setContentsMargins(25, 25, 25, 25)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.label_5 = QtWidgets.QLabel(self.tab_6)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setTextFormat(QtCore.Qt.AutoText)
        self.label_5.setScaledContents(False)
        self.label_5.setObjectName("label_5")
        self.verticalLayout_7.addWidget(self.label_5, 0, QtCore.Qt.AlignHCenter)
        self.line_8 = QtWidgets.QFrame(self.tab_6)
        self.line_8.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_8.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_8.setObjectName("line_8")
        self.verticalLayout_7.addWidget(self.line_8)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setContentsMargins(50, 0, 50, 5)
        self.horizontalLayout_3.setSpacing(50)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.textEdit_3 = QtWidgets.QTextEdit(self.tab_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit_3.sizePolicy().hasHeightForWidth())
        self.textEdit_3.setSizePolicy(sizePolicy)
        self.textEdit_3.setAcceptRichText(False)
        self.textEdit_3.setObjectName("textEdit_3")
        self.horizontalLayout_3.addWidget(self.textEdit_3, 0, QtCore.Qt.AlignVCenter)
        self.advanced_search_button = QtWidgets.QPushButton(self.tab_6)
        self.advanced_search_button.setObjectName("advanced_search_button")
        self.horizontalLayout_3.addWidget(self.advanced_search_button)
        self.verticalLayout_7.addLayout(self.horizontalLayout_3)
        self.line_7 = QtWidgets.QFrame(self.tab_6)
        self.line_7.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_7.setObjectName("line_7")
        self.verticalLayout_7.addWidget(self.line_7)
        self.tableWidget_5 = QtWidgets.QTableWidget(self.tab_6)
        self.tableWidget_5.setAlternatingRowColors(False)
        self.tableWidget_5.setTextElideMode(QtCore.Qt.ElideRight)
        self.tableWidget_5.setObjectName("tableWidget_5")
        self.tableWidget_5.setColumnCount(4)
        self.tableWidget_5.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_5.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_5.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_5.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_5.setHorizontalHeaderItem(3, item)
        self.tableWidget_5.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget_5.horizontalHeader().setMinimumSectionSize(75)
        self.tableWidget_5.horizontalHeader().setSortIndicatorShown(True)
        self.tableWidget_5.horizontalHeader().setStretchLastSection(True)
        self.tableWidget_5.verticalHeader().setVisible(False)
        self.verticalLayout_7.addWidget(self.tableWidget_5)
        self.tab_widget.addTab(self.tab_6, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.tab_5)
        self.verticalLayout_3.setContentsMargins(25, 25, 25, 25)
        self.verticalLayout_3.setSpacing(10)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_2 = QtWidgets.QLabel(self.tab_5)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setTextFormat(QtCore.Qt.AutoText)
        self.label_2.setScaledContents(False)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_3.addWidget(self.label_2, 0, QtCore.Qt.AlignHCenter)
        self.line_3 = QtWidgets.QFrame(self.tab_5)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.verticalLayout_3.addWidget(self.line_3)
        self.update_follower_list_button = QtWidgets.QPushButton(self.tab_5)
        self.update_follower_list_button.setObjectName("update_follower_list_button")
        self.verticalLayout_3.addWidget(self.update_follower_list_button, 0, QtCore.Qt.AlignHCenter)
        self.tableWidget_2 = QtWidgets.QTableWidget(self.tab_5)
        self.tableWidget_2.setAlternatingRowColors(False)
        self.tableWidget_2.setTextElideMode(QtCore.Qt.ElideRight)
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(4)
        self.tableWidget_2.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(3, item)
        self.tableWidget_2.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget_2.horizontalHeader().setMinimumSectionSize(75)
        self.tableWidget_2.horizontalHeader().setSortIndicatorShown(True)
        self.tableWidget_2.horizontalHeader().setStretchLastSection(True)
        self.tableWidget_2.verticalHeader().setVisible(False)
        self.verticalLayout_3.addWidget(self.tableWidget_2)
        self.tab_widget.addTab(self.tab_5, "")
        self.verticalLayout.addWidget(self.tab_widget)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        MainWindow.setCentralWidget(self.centralwidget)

        self.tableWidget.verticalHeader().setSectionResizeMode(QtWidgets.QHeaderView.ResizeToContents)
        self.tableWidget_2.verticalHeader().setSectionResizeMode(QtWidgets.QHeaderView.ResizeToContents)
        self.tableWidget_5.verticalHeader().setSectionResizeMode(QtWidgets.QHeaderView.ResizeToContents)
        self.search_button.clicked.connect(self.search_twitter)
        self.update_follower_list_button.clicked.connect(self.update_following_list)

        self.retranslateUi(MainWindow)
        self.tab_widget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "TFM"))
        self.label.setText(_translate("MainWindow", "Búsqueda rápida en Twitter"))
        self.textEdit.setPlaceholderText(_translate("MainWindow", "Introduzca sus términos de búsqueda en este campo. . . (Recupera los últimos 50 tweets que coincidan con la consulta)"))
        self.search_button.setText(_translate("MainWindow", "Buscar"))
        self.tableWidget.setSortingEnabled(True)
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Imagen"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Usuario"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Seguimiento"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Tweet"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.tab_1), _translate("MainWindow", "Búsqueda rápida"))
        self.label_5.setText(_translate("MainWindow", "Búsqueda en profundidad en Twitter"))
        self.textEdit_3.setPlaceholderText(_translate("MainWindow", "Introduzca sus términos de búsqueda en este campo. . . (Recupera los últimos 50 tweets que coincidan con la consulta)"))
        self.advanced_search_button.setText(_translate("MainWindow", "Buscar"))
        self.tableWidget_5.setSortingEnabled(True)
        item = self.tableWidget_5.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Imagen"))
        item = self.tableWidget_5.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Usuario"))
        item = self.tableWidget_5.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Seguimiento"))
        item = self.tableWidget_5.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Tweet"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.tab_6), _translate("MainWindow", "Búsqueda en profundidad"))
        self.label_2.setText(_translate("MainWindow", "Panel de seguimiento de cuentas"))
        self.update_follower_list_button.setText(_translate("MainWindow", "Actualizar lista de seguimiento"))
        self.tableWidget_2.setSortingEnabled(True)
        item = self.tableWidget_2.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Imagen"))
        item = self.tableWidget_2.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Usuario"))
        item = self.tableWidget_2.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Seguimiento"))
        item = self.tableWidget_2.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Siguiendo desde"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.tab_5), _translate("MainWindow", "Cuentas seguidas"))

    def search_twitter(self):
            dialog = self.__loading_menu("tweets", horizontal_size=250)
            query = self.textEdit.toPlainText()
            self.populate_simple_search_table(query, dialog)
    
    def update_following_list(self):
            dialog = self.__loading_menu("cuentas seguidas", horizontal_size=300)
            self.populate_following_table(dialog)

    def __loading_menu(self, string, horizontal_size=250):
        dialog = QtWidgets.QDialog(self.centralwidget)
        dialog.setWindowTitle(f"Cargando {string}. . .")
        dialog.resize(horizontal_size, 1)
        dialog.open()

        return dialog

    def populate_simple_search_table(self, query, loading_dialog):
            self.tableWidget.setRowCount(0)

            tweets = self.twitter_handler.custom_twitter_search(query)
            self.tableWidget.setRowCount(len(tweets))

            for i in range(len(tweets)):
                item = QtWidgets.QTableWidgetItem()
                item.setTextAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                self.tableWidget.setItem(i, 0, item)
                item = QtWidgets.QTableWidgetItem()
                item.setTextAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                self.tableWidget.setItem(i, 1, item)
                item = QtWidgets.QTableWidgetItem()
                item.setTextAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                self.tableWidget.setItem(i, 2, item)
                item = QtWidgets.QTableWidgetItem()
                item.setTextAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                self.tableWidget.setItem(i, 3, item)

                profile_image_label = self.__get_profile_image_label(tweets[i].user.profile_image_url)
                followed_image_label = self.__get_followed_image_label(tweets[i].user.screen_name)
                self.tableWidget.setCellWidget(i, 0, profile_image_label)
                self.tableWidget.item(i, 1).setText(tweets[i].user.screen_name)
                self.tableWidget.setCellWidget(i, 2, followed_image_label)
                self.tableWidget.item(i, 3).setText(f"RT @{tweets[i].retweeted_status.user.screen_name}: " + tweets[i].retweeted_status.full_text 
                                                    if tweets[i].full_text.startswith("RT @") 
                                                    else tweets[i].full_text)
            
            loading_dialog.close()
        
    def populate_following_table(self, loading_dialog):
            self.tableWidget_2.setRowCount(0)

            accounts = self.database_handler.read_followed_accounts()
            self.tableWidget_2.setRowCount(len(accounts))

            for i in range(len(accounts)):
                item = QtWidgets.QTableWidgetItem()
                item.setTextAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                self.tableWidget_2.setItem(i, 0, item)
                item = QtWidgets.QTableWidgetItem()
                item.setTextAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                self.tableWidget_2.setItem(i, 1, item)
                item = QtWidgets.QTableWidgetItem()
                item.setTextAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                self.tableWidget_2.setItem(i, 2, item)
                item = QtWidgets.QTableWidgetItem()
                item.setTextAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                self.tableWidget_2.setItem(i, 3, item)

                profile_image_label = self.__get_profile_image_label(self.twitter_handler.recover_account_info(accounts[i][0]).profile_image_url)
                followed_image_label = self.__get_followed_image_label(accounts[i][0])
                self.tableWidget_2.setCellWidget(i, 0, profile_image_label)
                self.tableWidget_2.item(i, 1).setText(accounts[i][0])
                self.tableWidget_2.setCellWidget(i, 2, followed_image_label)
                self.tableWidget_2.item(i, 3).setText(accounts[i][1])
            
            loading_dialog.close()

    def __get_profile_image_label(self, image_url):
        container_widget = QtWidgets.QWidget()
        center_layout = QtWidgets.QHBoxLayout()
        
        image_label = QtWidgets.QLabel()
        image_label.setFixedSize(80, 80)
        image_label.setScaledContents(True)

        center_layout.addWidget(image_label)
        container_widget.setLayout(center_layout)
        
        try:
            response = requests.get(image_url.replace("_normal", ""))
            image = Image.open(BytesIO(response.content))

            byte_array = BytesIO()
            image.save(byte_array, format=image.format)
            byte_array = byte_array.getvalue()

            pixmap = QtGui.QPixmap()
            pixmap.loadFromData(byte_array)

            image_label.setPixmap(pixmap)
        
        except:
            image_label.setText("")

        return container_widget

    def __get_followed_image_label(self, twitter_handle):
        container_widget = QtWidgets.QWidget()
        center_layout = QtWidgets.QHBoxLayout()
        
        image_label = ClickableLabel()
        image_label.setFixedSize(60, 60)
        image_label.setScaledContents(True)

        center_layout.addWidget(image_label)
        container_widget.setLayout(center_layout)
        
        try:
            if self.database_handler.find_followed_account(twitter_handle):
                pixmap = QtGui.QPixmap("./src/resources/images/check_mark.png")
                image_label.clicked.connect(lambda: self.__unfollow_account(twitter_handle, image_label))
            else:
                pixmap = QtGui.QPixmap("./src/resources/images/follow_account.png")
                image_label.clicked.connect(lambda: self.__follow_account(twitter_handle, image_label))

            image_label.setPixmap(pixmap)
        
        except:
            image_label.setText("")

        return container_widget

    def __follow_account(self, twitter_handle, image_label):
        message_box = self.__generate_message_box()
        message_box.setText(f"¿Desea añadir la cuenta @{twitter_handle} a la lista de cuentas seguidas?")
        result = message_box.exec_()

        if result == QtWidgets.QMessageBox.Yes:
            self.database_handler.add_account(twitter_handle)
            image_label.clicked.disconnect()
            image_label.setPixmap(QtGui.QPixmap("./src/resources/images/check_mark.png"))
            image_label.clicked.connect(lambda: self.__unfollow_account(twitter_handle, image_label))

    def __unfollow_account(self, twitter_handle, image_label):
        message_box = self.__generate_message_box()
        message_box.setText(f"¿Desea eliminar la cuenta @{twitter_handle} de la lista de cuentas seguidas?")
        result = message_box.exec_()

        if result == QtWidgets.QMessageBox.Yes:
            self.database_handler.delete_followed_account(twitter_handle)
            image_label.clicked.disconnect()
            image_label.setPixmap(QtGui.QPixmap("./src/resources/images/follow_account.png"))
            image_label.clicked.connect(lambda: self.__follow_account(twitter_handle, image_label))

    def __generate_message_box(self):
        message_box = QtWidgets.QMessageBox()
        message_box.setIcon(QtWidgets.QMessageBox.Question)
        message_box.setWindowTitle("Confirmación de seguimiento")
        message_box.setStandardButtons(QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No)
        yes_button = message_box.button(QtWidgets.QMessageBox.Yes)
        yes_button.setText("Sí")
        no_button = message_box.button(QtWidgets.QMessageBox.No)
        no_button.setText("No")
        message_box.setDefaultButton(QtWidgets.QMessageBox.No)

        return message_box
